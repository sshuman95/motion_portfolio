{"version":3,"sources":["logo.svg","Components/splash_page/splash.js","Components/projects/projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Splash","div","initial","scale","animate","x","y","rotate","transition","delay","duration","type","stiffness","damping","className","ease","opacity","src","style","color","Projects","display","backgroundColor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gKAAAA,EAAOC,QAAU,IAA0B,kC,oHCwC5BC,EAnCA,WACX,OACI,kBAAC,IAAOC,IAAR,CACAC,QAAS,CAAEC,MAAO,GAClBC,QAAS,CACPC,EAAG,EACHC,EAAG,EACHH,MAAO,EACPI,OAAQ,GAEVC,WAAY,CACRC,MAAO,GACPC,SAAU,GACVC,KAAM,SACNC,UAAW,IACXC,QAAS,IAEbC,UAAU,iBAER,kBAAC,IAAOb,IAAR,CACEO,WAAY,CAAEO,KAAM,SAAUL,SAAU,IACxCR,QAAS,CAAEI,EAAG,IAAKU,QAAQ,GAC3BZ,QAAS,CAAEE,EAAG,IAAKU,QAAQ,IAE7B,yBAAKC,IAAI,gEACT,wBAAIC,MAAO,CAACC,MAAM,UAAlB,oBCTKC,EAhBE,WACb,OACI,kBAAC,IAAOnB,IAAR,CACAO,WAAY,CAAEO,KAAM,SAAUL,SAAU,GAAID,MAAM,GAClDP,QAAS,CAAEI,EAAG,GAAIe,QAAQ,QAC1BjB,QAAS,CAAEE,EAAG,GAAGe,QAAQ,UAEvB,yBAAKH,MAAO,CAACI,gBAAgB,QAASH,MAAM,UAEtC,wBAAID,MAAO,CAACC,MAAM,UAAlB,eCEDI,MAXf,WACE,OACE,yBAAKT,UAAU,OACZ,kBAAC,EAAD,MACD,8BACE,kBAAC,EAAD,SCEYU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4456da49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { motion } from \"framer-motion\"\r\n\r\n\r\n\r\nconst Splash = () =>{\r\n    return (\r\n        <motion.div\r\n        initial={{ scale: 1 }}\r\n        animate={{\r\n          x: 0,\r\n          y: 0,\r\n          scale: 0,\r\n          rotate: 0,\r\n        }}\r\n        transition={{\r\n            delay: .8,\r\n            duration: .8,\r\n            type: \"spring\",\r\n            stiffness: 260,\r\n            damping: 20\r\n          }}\r\n        className=\"splash_motion\"\r\n      >\r\n          <motion.div \r\n            transition={{ ease: \"easeIn\", duration: 0.2 }}\r\n            initial={{ y: 300, opacity:0}}\r\n            animate={{ y: 300, opacity:1 }}\r\n            >\r\n          <img src=\"https://sidneyshuman.com/static/media/new_logo.ee76600a.png\"/>\r\n          <h1 style={{color:\"white\"}}>Web Developer</h1>\r\n          </motion.div>\r\n          \r\n          </motion.div>\r\n        \r\n          \r\n          \r\n    )\r\n};\r\n\r\nexport default Splash;\r\n\r\n/*        <motion.div\r\n        initial={{ scale: 1 }}\r\n        animate={{\r\n          x: 0,\r\n          y: 0,\r\n          scale: 0,\r\n          rotate: 0,\r\n        }}\r\n        transition={{\r\n            delay: 2,\r\n            duration: .8,\r\n            type: \"spring\",\r\n            stiffness: 260,\r\n            damping: 20\r\n          }}\r\n        className=\"splash_motion\"\r\n      >\r\n          <motion.div \r\n            transition={{ ease: \"easeIn\", duration: 0.4 }}\r\n            initial={{ y: 200}}\r\n            animate={{ y: 300 }}\r\n            >\r\n          <h1 style={{color:\"white\"}}>Sidney Shuman</h1>\r\n          </motion.div>\r\n          <motion.div \r\n            transition={{ type:\"spring\", duration: 0.4,delay: .4, }}\r\n            initial={{scale:0,y:300}}\r\n            animate={{scale:1,y:310 }}\r\n            >\r\n          <h1 style={{color:\"white\"}}>Web Developer</h1>\r\n          </motion.div>\r\n          \r\n          </motion.div>\r\n        \r\n           */","import React from \"react\";\r\nimport { motion } from \"framer-motion\"\r\n\r\n\r\n\r\nconst Projects = () =>{\r\n    return (\r\n        <motion.div \r\n        transition={{ ease: \"easeIn\", duration: .4, delay:2}}\r\n        initial={{ y: 60, display:\"none\"}}\r\n        animate={{ y: 10,display:\"block\" }}\r\n        >\r\n          <div style={{backgroundColor:\"black\", color:\"white\"}}>\r\n   \r\n                <h1 style={{color:\"white\"}}>Projects</h1>\r\n               \r\n          </div>\r\n          </motion.div>  \r\n    )\r\n};\r\n\r\nexport default Projects;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Splash from \"./Components/splash_page/splash\";\nimport Projects from \"./Components/projects/projects\";\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Splash/>\n      <main>\n        <Projects/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}